---

kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx-configuration-external
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx-ext
    app.kubernetes.io/part-of: ingress-nginx
data:
  use-forwarded-headers: "true"
  compute-full-forwarded-for: "true"


---
kind: ConfigMap
apiVersion: v1
metadata:
  name: tcp-services-external
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx-ext
    app.kubernetes.io/part-of: ingress-nginx

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: udp-services-external
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx-ext
    app.kubernetes.io/part-of: ingress-nginx

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress-controller-ext
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx-ext
    app.kubernetes.io/part-of: ingress-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx-ext
      app.kubernetes.io/part-of: ingress-nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ingress-nginx-ext
        app.kubernetes.io/part-of: ingress-nginx
      annotations:
        prometheus.io/port: "10254"
        prometheus.io/scrape: "true"
    spec:
      # wait up to five minutes for the drain of connections
      terminationGracePeriodSeconds: 300
      serviceAccountName: nginx-ingress-serviceaccount
      containers:
        - name: nginx-ingress-controller-ext
          image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.26.1
          args:
            - /nginx-ingress-controller
            - --configmap=$(POD_NAMESPACE)/nginx-configuration-external
            - --tcp-services-configmap=$(POD_NAMESPACE)/tcp-services-external
            - --udp-services-configmap=$(POD_NAMESPACE)/udp-services-external
            - --publish-service=$(POD_NAMESPACE)/ingress-nginx-external
            - --annotations-prefix=nginx.ingress.kubernetes.io
            - --ingress-class=nginx-external
            - --election-id=ingress-controller-leader-external
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
            # www-data -> 33
            runAsUser: 33
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          lifecycle:
            preStop:
              exec:
                command:
                  - /wait-shutdown
---
---
apiVersion: v1
kind: Service
metadata:
  name: ingress-nginx-external
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx-ext
    app.kubernetes.io/part-of: ingress-nginx
spec:
  externalTrafficPolicy: Local
  type: LoadBalancer
  ports:
    - name: http
      port: 80
      targetPort: 80
      protocol: TCP
    - name: https
      port: 443
      targetPort: 443
      protocol: TCP
  selector:
    app.kubernetes.io/name: ingress-nginx-ext
    app.kubernetes.io/part-of: ingress-nginx
