---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: beezuscomplex-data
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: web-beezuscomplex
spec:
  selector:
    matchLabels:
      app: web-beezuscomplex
  replicas : 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: web-beezuscomplex
    spec:
      containers:
      - image: ghost:2.2.0
        name: ghost-beezuscomplex
        env:
        # kubectl create secret generic beezuscomplex-dbuser -n web --from-literal=dbuser=DBUSER
        - name: database__connection__user
          valueFrom:
            secretKeyRef:
              name: beezuscomplex-dbuser
              key: dbuser
          # kubectl create secret generic beezuscomplex-dbpass -n web --from-literal=dbpass=DBPASS
        - name: database__connection__password
          valueFrom:
            secretKeyRef:
              name: beezuscomplex-dbpass
              key: dbpass
        ports:
        - containerPort: 2368
        volumeMounts:
        - name: beezuscomplex-data
          mountPath: /var/lib/ghost/content
        - name: beezuscomplex-config
          mountPath: /var/lib/ghost/config.production.json
          subPath: config.production.json
      volumes:
      - name: beezuscomplex-data
        persistentVolumeClaim:
          claimName: beezuscomplex-data
      # kubectl create configmap beezuscomplex-config -n web --from-file=config.json
      - name: beezuscomplex-config
        configMap:
          name: beezuscomplex-config
          items:
          - key: config.production.json
            path: config.production.json

---
apiVersion: v1
kind: Service
metadata:
  name: web-beezuscomplex
  labels:
    app: web-beezuscomplex
spec:
  ports:
  - name: server
    port: 80
    targetPort: 2368
  selector:
    app: web-beezuscomplex

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: web-beezuscomplex
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-body-size: 50m
spec:
  tls:
    - secretName: beezuscomplex-com-tls
  rules:
  - host: "beezuscomplex.com"
    http:
      paths:
      - backend:
          serviceName: web-beezuscomplex
          servicePort: 80
        path: /
      - backend:
          serviceName: static-web
          servicePort: 80
        path: /static
  - host: "home.beezuscomplex.com"
    http:
      paths:
      - backend:
          serviceName: web-beezuscomplex
          servicePort: 80
        path: /
      - backend:
          serviceName: static-web
          servicePort: 80
        path: /static

