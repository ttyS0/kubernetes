apiVersion: apps/v1
kind: Deployment
metadata:
  name: skj
  namespace: bookstack
spec:
  selector:
    matchLabels:
      app: skj
  replicas: 2
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: skj
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - skj
              topologyKey: "kubernetes.io/hostname"
      imagePullSecrets:
        - name: home-registry
      containers:
        - name: skj
          image: docker.ttys0.net/bookstack:0.28.2-1
          env:
            - name: DB_HOST
              value: "mariadb.mariadb.svc.cluster.local"
            - name: DB_DATABASE
              valueFrom:
                secretKeyRef:
                  key: db
                  name: bookstack-skj-db
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  key: dbuser
                  name: bookstack-skj-db
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: dbpass
                  name: bookstack-skj-db
            - name: STORAGE_TYPE
              value: "s3"
            - name: STORAGE_S3_KEY
              valueFrom:
                secretKeyRef:
                  key: accessID
                  name: bookstack-s3
            - name: STORAGE_S3_SECRET
              valueFrom:
                secretKeyRef:
                  key: secretKey
                  name: bookstack-s3
            - name: STORAGE_S3_BUCKET
              valueFrom:
                secretKeyRef:
                  key: bucket
                  name: bookstack-skj-s3
            - name: STORAGE_S3_REGION
              valueFrom:
                secretKeyRef:
                  key: region
                  name: bookstack-skj-s3
            - name: GITHUB_APP_ID
              valueFrom:
                secretKeyRef:
                  key: clientID
                  name: bookstack-skj-github
            - name: GITHUB_APP_SECRET
              valueFrom:
                secretKeyRef:
                  key: clientSecret
                  name: bookstack-skj-github
            - name: APP_URL
              value: "https://skj.wiki"
            - name: CACHE_DRIVER
              value: "database"
            - name: SESSION_DRIVER
              value: "database"
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: skj
  namespace: bookstack
  labels:
    app: skj
spec:
  ports:
    - port: 80
  selector:
    app: skj
  sessionAffinity: ClientIP
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: skj
  namespace: bookstack
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/affinity-mode: "persistent"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
    - host: skj.wiki
      http:
        paths:
          - path: /
            backend:
              serviceName: skj
              servicePort: 80
  tls:
    - hosts:
        - skj.wiki
      secretName: skj-tls
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: skj-ext
  namespace: bookstack
  annotations:
    kubernetes.io/ingress.class: nginx-external
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/affinity-mode: "persistent"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
    - host: skj.wiki
      http:
        paths:
          - path: /
            backend:
              serviceName: skj
              servicePort: 80
  tls:
    - hosts:
        - skj.wiki
      secretName: skj-tls
