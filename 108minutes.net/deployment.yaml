apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: website-108minutes
  namespace: ingress-nginx
spec:
  selector:
    matchLabels:
      app: website-108minutes
  replicas : 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: website-108minutes
    spec:
      nodeSelector:
        beta.kubernetes.io/arch: arm64
      containers:
      - image: arm64v8/ghost:1.24.2
        name: ghost-108minutes
        env:
          # kubectl create secret generic 108minutes-dbuser --from-literal=dbuser=DBUSER
        - name: database__connection__user
          valueFrom:
            secretKeyRef:
              name: 108minutes-dbuser
              key: dbuser
          # kubectl create secret generic 108minutes-dbpass --from-literal=dbpass=DBPASS
        - name: database__connection__password
          valueFrom:
            secretKeyRef:
              name: 108minutes-dbpass
              key: dbpass
        ports:
        - containerPort: 2368
        volumeMounts:
        - name: 108minutes-data
          mountPath: /var/lib/ghost/content
        - name: 108minutes-config
          mountPath: /var/lib/ghost/config.production.json
          subPath: config.production.json
      volumes:
      - name: 108minutes-data
        persistentVolumeClaim:
          claimName: 108minutes-data
      # kubectl create configmap 108minutes-config --from-file=config.json
      - name: 108minutes-config
        configMap:
          name: 108minutes-config
          items:
          - key: config.json
            path: config.production.json
      imagePullSecrets:
        - name: docker-reg-secret
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: 108minutes-data
  namespace: ingress-nginx
spec:
  storageClassName: rbd
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
