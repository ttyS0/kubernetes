---
apiVersion: v1
kind: Service
metadata:
  name: static-web
  namespace: ingress-nginx
  labels:
    app: static-web
spec:
  ports:
  - name: server
    port: 80
    targetPort: 80
  selector:
    app: static-web

---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: static-web-data
  namespace: ingress-nginx
spec:
  storageClassName: cephfs-static-web
  capacity:
    storage: 10Gi
  accessModes:
  - ReadWriteMany
  cephfs:
    monitors:
    - 10.0.1.50:6789
    - 10.0.1.51:6789
    - 10.0.1.52:6789
    user: static-web
    # kubectl create secret generic ceph-static-web -n ingress-nginx --from-literal=key='XXXXX'
    secretRef:
      name: ceph-static-web
    path: "/static-web"
    readOnly: false

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: static-web-data
  namespace: ingress-nginx
spec:
  storageClassName: cephfs-static-web
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 10Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: static-web
  namespace: ingress-nginx
spec:
  selector:
    matchLabels:
      app: static-web
  replicas: 2
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: static-web
    spec:
      nodeSelector:
        beta.kubernetes.io/arch: arm64
      containers:
      - name: static-web
        image: docker.ttys0.net/static-web-arm64:3
        command: ["/home/auto-reload-nginx.sh"]
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /etc/nginx/conf.d
          name: config
        - mountPath: /usr/share/nginx/html
          name: data
      volumes:
      # kubectl create configmap static-web-config -n ingress-nginx --from-file=default.conf
      - name: config
        configMap:
          name: static-web-config
      - name: data
        persistentVolumeClaim:
          claimName: static-web-data
      imagePullSecrets:
      - name: docker-reg-secret
