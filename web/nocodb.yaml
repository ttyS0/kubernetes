apiVersion: apps/v1
kind: Deployment
metadata:
  name: nocodb
  namespace: web
  labels:
    app.kubernetes.io/name: nocodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nocodb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nocodb
    spec:
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      containers:
        - name: nocodb
          image: nocodb/nocodb:0.11.40
          imagePullPolicy: IfNotPresent
          env:
            - name: NC_DB
              valueFrom:
                secretKeyRef:
                  key: "nc_db"
                  name: nocodb-pg
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            requests:
              memory: "3Gi"
            limits:
              memory: "4Gi"
---
apiVersion: v1
kind: Service
metadata:
  name: nocodb
  namespace: web
  labels:
    app.kubernetes.io/name: nocodb
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: nocodb
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nocodb
  namespace: web
  labels:
    app.kubernetes.io/name: nocodb
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.kubernetes.io/ssl-redirect: "true"
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
spec:
  rules:
    - host: "nocodb.skj.dev"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nocodb
                port:
                  number: 8080
  tls:
    - hosts:
        - nocodb.skj.dev
      secretName: nocodb-skj-dev-cert

