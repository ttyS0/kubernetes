kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: ghost-splashofink
  namespace: web
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: fast
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: web
  name: ghost-splashofink-conf
data:
  production.json: |
    {
      "url": "https://splashof.ink",
      "server": {
        "port": 2368,
        "host": "0.0.0.0"
      },
      "database": {
        "client": "mysql",
        "connection": {
          "host": "mariadb.mariadb.svc.cluster.local",
          "port": 3306,
          "database": "ghost_splashofink"
        }
      },
      "mail": {
        "transport": "SMTP",
        "options": {
          "service": "Mailgun",
          "host": "smtp.mailgun.org",
          "port": "587"
        }
      },
      "logging": {
        "transports": [
          "stdout"
        ]
      },
      "process": "systemd",
      "paths": {
        "contentPath": "/var/lib/ghost/content"
      }
    }

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: ghost-splashofink
  namespace: web
spec:
  selector:
    matchLabels:
      app: ghost-splashofink
  replicas : 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: ghost-splashofink
    spec:
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      containers:
        - image: library/ghost:3.42.0
          name: splashofink
          env:
            - name: database__connection__user
              valueFrom:
                secretKeyRef:
                  name: splashofink-db
                  key: dbuser
            - name: database__connection__password
              valueFrom:
                secretKeyRef:
                  name: splashofink-db
                  key: dbpass
            - name: mail__options__auth__user
              valueFrom:
                secretKeyRef:
                  name: mailgun-splashofink
                  key: user
            - name: mail__options__auth__pass
              valueFrom:
                secretKeyRef:
                  key: pass
                  name: mailgun-splashofink
          ports:
            - containerPort: 2368
          volumeMounts:
            - name: splashofink
              mountPath: /var/lib/ghost/content
            - name: splashofink-conf
              mountPath: /var/lib/ghost/config.production.json
              subPath: config.production.json
      volumes:
        - name: splashofink
          persistentVolumeClaim:
            claimName: ghost-splashofink
        - name: splashofink-conf
          configMap:
            name: ghost-splashofink-conf
            items:
              - key: production.json
                path: config.production.json

---
apiVersion: v1
kind: Service
metadata:
  name: ghost-splashofink
  namespace: web
  labels:
    app: ghost-splashofink
spec:
  ports:
    - name: server
      port: 80
      targetPort: 2368
  selector:
    app: ghost-splashofink
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ghost-splashofink
  namespace: web
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    acme.kubernetes.io/enable: "true"
    acme.kubernetes.io/dns: "dns_cf"
spec:
  rules:
    - host: splashof.ink
      http:
        paths:
          - path: /
            backend:
              serviceName: ghost-splashofink
              servicePort: 80
  tls:
    - hosts:
        - splashof.ink
      secretName: splashofink-tls
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ghost-splashofink-ext
  namespace: web
  annotations:
    kubernetes.io/ingress.class: nginx-external
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
spec:
  rules:
    - host: splashof.ink
      http:
        paths:
          - path: /
            backend:
              serviceName: ghost-splashofink
              servicePort: 80
  tls:
    - hosts:
        - splashof.ink
      secretName: splashofink-tls
