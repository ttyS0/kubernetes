apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/version: 2.1.0
  name: kube-state-metrics
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-state-metrics
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kube-state-metrics
        app.kubernetes.io/version: 2.1.0
    spec:
      containers:
        - image: k8s.gcr.io/kube-state-metrics/kube-state-metrics:v2.1.0
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 5
          name: kube-state-metrics
          ports:
            - containerPort: 8080
              name: http-metrics
            - containerPort: 8081
              name: telemetry
          readinessProbe:
            httpGet:
              path: /
              port: 8081
            initialDelaySeconds: 5
            timeoutSeconds: 5
          securityContext:
            runAsUser: 65534
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: kube-state-metrics
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/version: 2.1.0
  name: kube-state-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
    - name: http-metrics
      port: 8080
      targetPort: http-metrics
    - name: telemetry
      port: 8081
      targetPort: telemetry
  selector:
    app.kubernetes.io/name: kube-state-metrics
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kube-metrics
  namespace: kube-system
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
    acme.kubernetes.io/enable: "true"
    acme.kubernetes.io/dns: "dns_cf"
spec:
  rules:
    - host: kube-metrics.skj.dev
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kube-state-metrics
                port:
                  number: 8080
  tls:
    - hosts:
        - kube-metrics.skj.dev
      secretName: kubemetricsskjdev-tls
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kube-telemetry
  namespace: kube-system
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
    acme.kubernetes.io/enable: "true"
    acme.kubernetes.io/dns: "dns_cf"
spec:
  rules:
    - host: kube-telemetry.skj.dev
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kube-state-metrics
                port:
                  number: 8081
  tls:
    - hosts:
        - kube-telemetry.skj.dev
      secretName: kubetelemetryskjdev-tls
