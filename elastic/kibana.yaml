---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kb-config
  namespace: elastic
data:
  kibana.yml: |
    server.name: kibana
    server.host: "0"
    elasticsearch.hosts: "http://elasticsearch:9200"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: elastic
spec:
  selector:
    matchLabels:
      app: kibana
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: kibana
    spec:
      nodeSelector:
        kubernetes.io/arch: amd64
      securityContext:
        fsGroup: 1000
      containers:
        - name: kibana
          resources:
            requests:
              cpu: 100m
            limits:
              cpu: 1000m
          securityContext:
            runAsUser: 1000
          image: docker.elastic.co/kibana/kibana:7.5.1
          ports:
            - containerPort: 5601
              name: kb-ui
          volumeMounts:
            - name: kb-config
              mountPath: /usr/share/kibana/config/kibana.yml
              subPath: kibana.yml
      volumes:
        - name: kb-config
          configMap:
            name: kb-config
            items:
              - key: kibana.yml
                path: kibana.yml
---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: elastic
  labels:
    app: kibana
spec:
  ports:
    - name: kb-ui
      port: 5601
  selector:
    app: kibana
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: kibana
  namespace: elastic
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/whitelist-source-range: '10.0.1.0/24, 10.0.8.0/24, 160.129.250.188/32'
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
    - host: kibana.ttys0.net
      http:
        paths:
          - path: /
            backend:
              serviceName: kibana
              servicePort: 5601
  tls:
    - hosts:
        - kibana.ttys0.net
      secretName: kibana-tls
