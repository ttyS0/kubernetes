kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: beezuscomplex
  namespace: ghost
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: fast
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: beezuscomplex
  namespace: ghost
spec:
  selector:
    matchLabels:
      app: beezuscomplex
  replicas : 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: beezuscomplex
    spec:
      containers:
        - image: ghost:3.19.2
          name: ghost-beezuscomplex
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: beezuscomplex-s3
                  key: accessID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: beezuscomplex-s3
                  key: secretKey
            # kubectl create secret generic beezuscomplex-dbuser -n web --from-literal=dbuser=DBUSER
            - name: database__connection__user
              valueFrom:
                secretKeyRef:
                  name: beezuscomplex-dbuser
                  key: dbuser
              # kubectl create secret generic beezuscomplex-dbpass -n web --from-literal=dbpass=DBPASS
            - name: database__connection__password
              valueFrom:
                secretKeyRef:
                  name: beezuscomplex-dbpass
                  key: dbpass
          ports:
            - containerPort: 2368
          volumeMounts:
            - name: beezuscomplex
              mountPath: /var/lib/ghost/content
            - name: beezuscomplex-conf
              mountPath: /var/lib/ghost/config.production.json
              subPath: config.production.json
      volumes:
        - name: beezuscomplex
          persistentVolumeClaim:
            claimName: beezuscomplex
        - name: beezuscomplex-conf
          configMap:
            name: beezuscomplex-conf
            items:
              - key: production.json
                path: config.production.json

---
apiVersion: v1
kind: Service
metadata:
  name: beezuscomplex
  namespace: ghost
  labels:
    app: beezuscomplex
spec:
  ports:
    - name: server
      port: 80
      targetPort: 2368
  selector:
    app: beezuscomplex
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: ghost
  name: beezuscomplex-conf
data:
  production.json: |
    {
      "url": "http://beezuscomplex.com",
      "server": {
        "port": 2368,
        "host": "0.0.0.0"
      },
      "database": {
        "client": "mysql",
        "connection": {
          "host": "mariadb.mariadb.svc",
          "port": 3306,
          "database": "ghost_beezuscomplex"
        }
      },
      "mail": {
        "from": "ghost@ttys0.net",
        "transport": "SMTP",
        "options": {
          "host": "smtp-relay.gmail.com",
          "port": 587
        }
      },
      "logging": {
        "transports": [
          "stdout"
        ]
      },
      "process": "systemd",
      "paths": {
        "contentPath": "/var/lib/ghost/content"
      },
      "storage": {
        "active": "s3",
        "s3": {
          "region": "us-east-1",
          "bucket": "ghost-beezuscomplex-com",
          "assetHost": "https://cdn.beezuscomplex.com"
        }
      }
    }

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: beezuscomplex
  namespace: ghost
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: "letsencrypt"
spec:
  rules:
    - host: beezuscomplex.com
      http:
        paths:
          - path: /
            backend:
              serviceName: beezuscomplex
              servicePort: 80
          - path: /.well-known
            backend:
              serviceName: static-web
              servicePort: 80
  tls:
    - hosts:
        - beezuscomplex.com
        - www.beezuscomplex.com
      secretName: beezuscomplex-com-tls
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: beezuscomplex-ext
  namespace: ghost
  annotations:
    kubernetes.io/ingress.class: nginx-external
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: "letsencrypt"
spec:
  rules:
    - host: beezuscomplex.com
      http:
        paths:
          - path: /
            backend:
              serviceName: beezuscomplex
              servicePort: 80
          - path: /.well-known
            backend:
              serviceName: static-web
              servicePort: 80
  tls:
    - hosts:
        - beezuscomplex.com
        - www.beezuscomplex.com
      secretName: beezuscomplex-com-tls
