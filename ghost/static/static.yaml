apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: static
  namespace: ghost
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1G
---
apiVersion: v1
kind: Service
metadata:
  name: static
  namespace: ghost
  labels:
    app: static
spec:
  ports:
    - name: server
      port: 80
      targetPort: 80
  selector:
    app: static
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: ghost
  name: static-conf
data:
  default.conf: |
    server {
        listen 80 default_server;

        root /usr/share/nginx/html/default;
        index index.html;

        server_name localhost;

        location / {
            autoindex  on;
            try_files $uri $uri/ =404;
        }
    }

    server {
        listen 80;
        server_name skj.dev;
        root /usr/share/nginx/html/skj.dev;
        index index.html;
        autoindex on;

        location / {
            try_files $uri $uri/ =404;
        }
    }

    server {
        listen 80;
        server_name pasta.dev;
        root /usr/share/nginx/html/pasta.dev;
        index index.html;
        autoindex on;

        location / {
            try_files $uri $uri/ =404;
        }
    }
    
    server {
        listen 80;
        server_name c3p.io;
        root /usr/share/nginx/html/c3p.io;
        index index.html;
        autoindex on;

        location / {
            try_files $uri $uri/ =404;
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: static
  namespace: ghost
spec:
  selector:
    matchLabels:
      app: static
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: static
    spec:
      containers:
        - name: static
          image: ghcr.io/ttys0/static-web:1.21.6
          command: ["/home/auto-reload-nginx.sh"]
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /etc/nginx/conf.d
              name: config
            - mountPath: /usr/share/nginx/html
              name: data
      volumes:
        - name: config
          configMap:
            name: static-conf
        - name: data
          persistentVolumeClaim:
            claimName: static

