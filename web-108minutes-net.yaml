---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: 108minutes-data
  namespace: web
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: web-108minutes
  namespace: web
spec:
  selector:
    matchLabels:
      app: web-108minutes
  replicas : 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: web-108minutes
    spec:
      containers:
      - image: ghost:2.2.0
        name: ghost-108minutes
        env:
        # kubectl create secret generic 108minutes-dbuser --from-literal=dbuser=DBUSER
        - name: database__connection__user
          valueFrom:
            secretKeyRef:
              name: 108minutes-dbuser
              key: dbuser
          # kubectl create secret generic 108minutes-dbpass --from-literal=dbpass=DBPASS
        - name: database__connection__password
          valueFrom:
            secretKeyRef:
              name: 108minutes-dbpass
              key: dbpass
        ports:
        - containerPort: 2368
        volumeMounts:
        - name: 108minutes-data
          mountPath: /var/lib/ghost/content
        - name: 108minutes-config
          mountPath: /var/lib/ghost/config.production.json
          subPath: config.production.json
      volumes:
      - name: 108minutes-data
        persistentVolumeClaim:
          claimName: 108minutes-data
      # kubectl create configmap 108minutes-config --from-file=108minutesnet-config.json
      - name: 108minutes-config
        configMap:
          name: 108minutes-config
          items:
          - key: config.production.json
            path: config.production.json

---
apiVersion: v1
kind: Service
metadata:
  name: web-108minutes
  namespace: web
  labels:
    app: webs-108minutes
spec:
  ports:
  - name: server
    port: 80
    targetPort: 2368
  selector:
    app: web-108minutes

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: web-108minutes
  namespace: web
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-body-size: 50m
    nginx.ingress.kubernetes.io/affinity: cookie
spec:
  tls:
  - secretName: 108minutes-net-tls
  rules:
  - host: "108minutes.net"
    http:
      paths:
      - path: /
        backend:
          serviceName: web-108minutes
          servicePort: 80
      - path: /static
        backend:
          serviceName: static-web
          servicePort: 80
      - path: /.well-known
        backend:
          serviceName: static-web
          servicePort: 80
  - host: "home.108minutes.net"
    http:
      paths:
      - path: /
        backend:
          serviceName: web-108minutes
          servicePort: 80
      - path: /static
        backend:
          serviceName: static-web
          servicePort: 80
      - path: /.well-known
        backend:
          serviceName: static-web
          servicePort: 80
